Point result[maxn]; int top;
bool cmp(Point A, Point B) {
	double ans = Cross(A - P[0], B - P[0]);
	if (dcmp(ans) == 0) return dcmp(Distance(P[0], A) - Distance(P[0], B)) < 0;
	else return ans > 0;
}
void Graham() {//Graham凸包扫描算法
	for (int i = 1; i < n; i++)//寻找起点
		if (P[i].y < P[0].y || (dcmp(P[i].y - P[0].y) == 0 && P[i].x < P[0].x)) swap(P[i], P[0]);
	sort(P + 1, P + n, cmp);//极角排序，中心为起点
	result[0] = P[0];
	result[1] = P[1];
	top = 1;
	for (int i = 2; i < n; i++) {
		while (top >= 1 && Cross(result[top] - result[top - 1], P[i] - result[top - 1]) < 0) top--;
		result[++top] = P[i];
	}
}